services:

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:${DB_HOST_PORT:-5432}"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  middleware:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL}
    healthcheck:
      test: ["CMD", "python", "manage.py", "check"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - static_volume:/middleware-dt/static

  neo4j:
    image: neo4j:5.8
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}  # <- Use variável única, sem redefinir USER/PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p ${NEO4J_PASSWORD} -e 'RETURN 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - middleware
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    - static_volume:/etc/nginx/staticfiles/static

  parser:
    image: andregustavoo/parserwebapi:latest
    ports:
      - "8082:8080"  # Porta 8082 no host, redireciona para 8080 no container
      - "8083:8081"  # Se o container também usar 8081
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    restart: always
    
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORGANIZATION}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - influxdb_data:/var/lib/influxdb2

volumes:
  db_data:
  static_volume:
  influxdb_data:
